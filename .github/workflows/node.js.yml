name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    # Step 1: Checkout the repository
    - uses: actions/checkout@v4

    # Step 2: Set up Node.js and Cache Dependencies
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    # Step 3: Create .env file from GitHub Secrets
    - name: Create .env file
      run: |
        echo "PORT=${{ secrets.PORT }}" >> .env
        echo "BASE_URL=${{ secrets.BASE_URL }}" >> .env
        echo "FRONT_END_URL=${{ secrets.FRONT_END_URL }}" >> .env
        echo "MONGODB_URL=${{ secrets.MONGODB_URL }}" >> .env
        echo "ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }}" >> .env
        echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
        echo "JWT_EXPIRE=${{ secrets.JWT_EXPIRE }}" >> .env
        echo "SEND_GRID_API_KEY=${{ secrets.SEND_GRID_API_KEY }}" >> .env
        echo "CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}" >> .env
        echo "CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}" >> .env
        echo "CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}" >> .env

    # Step 4: Install dependencies with npm ci
    - name: Install dependencies
      run: |
        npm ci
        # Exit early if npm ci fails
        if [ $? -ne 0 ]; then
          echo "npm ci failed!"
          exit 1
        fi

    # Step 5: Run build script (if present)
    - name: Build the project
      run: |
        npm run build --if-present
        # Exit early if npm run build fails
        if [ $? -ne 0 ]; then
          echo "npm run build failed!"
          exit 1
        fi

    # Optional: Run tests (if defined)
    - name: Run Tests
      run: |
        npm test --if-present
        if [ $? -ne 0 ]; then
          echo "Tests failed!"
          exit 1
        fi
