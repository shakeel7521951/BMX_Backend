name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Create .env file
        run: |
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "BASE_URL=${{ secrets.BASE_URL }}" >> .env
          echo "FRONT_END_URL=${{ secrets.FRONT_END_URL }}" >> .env
          echo "MONGODB_URL=${{ secrets.MONGODB_URL }}" >> .env
          echo "ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "JWT_EXPIRE=${{ secrets.JWT_EXPIRE }}" >> .env
          echo "SEND_GRID_API_KEY=${{ secrets.SEND_GRID_API_KEY }}" >> .env
          echo "CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}" >> .env
          echo "CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}" >> .env
          echo "CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}" >> .env

      - name: Install dependencies
        run: npm ci

      - name: Build the project
        run: npm run build --if-present

      - name: Run Tests
        run: npm test --if-present

      - name: Deploy to AWS Elastic Beanstalk
        run: |
          eb init -p node.js -r us-west-2 --region us-west-2
          eb use your-environment-name
          eb deploy
          
      - name: Show Runner Info
        run: |
          echo "Running on $(hostname)"
          node -v
          npm -v
